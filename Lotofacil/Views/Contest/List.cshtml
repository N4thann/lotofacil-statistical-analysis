@model IEnumerable<Lotofacil.Domain.Entities.Contest>
@{
    ViewData["Title"] = "Listar Concursos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- jQuery (necessário para DataTables) -->
<script src="~/adminlte/plugins/jquery/jquery.min.js"></script>

<!-- DataTables e Bootstrap 4 -->
<script src="~/adminlte/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/adminlte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>

<!-- DataTables Responsive -->
<script src="~/adminlte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/adminlte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>

<style>
.modal-painel {
    display: none;
    position: fixed;
    z-index: 1050;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal-dialog-painel {
    position: relative;
    width: 60%;
    margin: 10% auto;
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
}

.modal-header-painel {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-bottom: 10px;
    border-bottom: 1px solid #ddd;
}

.modal-title-painel {
    font-size: 20px;
    font-weight: bold;
}

.close-painel {
    background: none;
    border: none;
    font-size: 22px;
    cursor: pointer;
}

.modal-footer-painel {
    display: flex;
    justify-content: flex-end;
    padding-top: 10px;
    border-top: 1px solid #ddd;
}

.btn-painel {
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    border: none;
    cursor: pointer;
    border-radius: 5px;
}

.btn-painel:hover {
    background-color: #0056b3;
}
</style>


<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Lista de Concursos</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Home/Index">Página Inicial</a></li>
                    <li class="breadcrumb-item active">Concursos</li>
                </ol>
            </div>
        </div>
    </div>
</section>

@if (Model.Any())
{
    <div class="card card-orange" style="margin:16px;">
        <div class="card-header">
            <h3 class="card-title">Concursos</h3>
        </div>
        <div class="col-md-2 align-self-end">
            <button style="margin: 12px 0 12px 12px" class="btn btn-success" onclick="abrirModalAnalisar()">
                <i class="fas fa-layer-group"></i> Analisar selecionados
            </button>
        </div>
        <div class="card-body">
            <table class="table table-striped projects text-center" id="tabela1">
                <thead>
                    <tr class="text-lg">
                        <th style="width: 20%">
                            Nome
                        </th>
                        <th style="width: 20%">
                            <a asp-action="List" asp-route-sortOrder="@ViewData["SortOrder"]">
                                Data
                                @if (ViewData["SortOrder"]?.ToString() == "DateAsc")
                                {
                                    <i class="fas fa-arrow-up"></i>
                                }
                                else if (ViewData["SortOrder"]?.ToString() == "DateDesc")
                                {
                                    <i class="fas fa-arrow-down"></i>
                                }
                            </a>
                        </th>
                        <th>
                            Analisar
                        </th>
                        <th style="width: 60%">
                            Concursos
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </a>
                            </td>
                            <td>
                                <a>
                                    @item.Data.ToShortDateString()
                                </a>
                            </td>
                            <td style="text-align: center; vertical-align: middle;">
                                <input type="checkbox" class="checkbox-analisar" id="chk-@item.Id" value="@item.Id" style="transform: scale(1.5)"/>
                            </td>
                            <td>
                                <a>
                                    @Html.DisplayFor(modelItem => item.Numbers)
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<div id="modalAnalisar" class="modal-painel" style="display: none;">
    <div class="modal-dialog-painel">
        <div class="modal-content-painel">
            <div class="modal-header-painel">
                <h4 class="modal-title-painel">Análises</h4>
                <button type="button" class="close-painel" onclick="fecharModal('modalAnalisar')">&times;</button>
            </div>
            <div class="=modal-body-painel">

            </div>
            <div class="modal-footer-painel">
                <button type="button" class="btn-painel" onclick="fecharModal('modalAnalisar')">Fechar</button>
            </div>
        </div>
    </div>
</div>


<script>
    let selecionadosGlobalmente = new Set();
    
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.checkbox-analisar').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                let concurso = parseInt(this.value);

                if (this.checked) {
                    selecionadosGlobalmente.add(concurso);
                } else {
                    selecionadosGlobalmente.delete(concurso);
                }
            });
        });
    });

    function abrirModalAnalisar() {
        if (selecionadosGlobalmente.size < 1) {
            alert("Selecione pelo menos dois concursos para analisar");
            return;
        }

        fetch('/List/AnalisarConcursos', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ Contests: Array.from(selecionadosGlobalmente) })
        })
            .then(response => response.json())
            .then(data => {
                if (data.sucesso) {
                    document.getElementById("modalAnalisar").style.display = "block";
                } else {
                    alert("Erro ao processar a análise.");
                }
            })
            .catch(error => console.error('Erro na requisição:', error));
    }


    function fecharModal(id) {
        document.getElementById(id).style.display = "none";
        location.reload(); // Recarrega a página ao fechar o modal
    }
</script>

<script>
    $(document).ready(function () {
        let tabela = $("#tabela1").DataTable({
            "paging": true,
            "pageLength": 10,
            "lengthMenu": [10, 25, 50, 100],
            "language": {
                "decimal": "",
                "emptyTable": "Nenhum registro encontrado",
                "info": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                "infoEmpty": "Mostrando 0 até 0 de 0 registros",
                "infoFiltered": "(Filtrados de _MAX_ registros)",
                "lengthMenu": "Mostrar _MENU_ resultados por página",
                "loadingRecords": "Carregando...",
                "processing": "Processando...",
                "search": "Pesquisar:",
                "zeroRecords": "Nenhum registro encontrado",
                "paginate": {
                    "first": "Primeiro",
                    "last": "Último",
                    "next": "Próximo",
                    "previous": "Anterior"
                }
            },
            "responsive": true,
            "ordering": false,
            "lengthChange": true,
            "autoWidth": false
        });

        // Restaurar checkboxes ao mudar de página
        $('#tabela1 tbody').on('change', '.checkbox-analisar', function () {
            let id = parseInt(this.value);

            if (this.checked) {
                selecionadosGlobalmente.add(id);
            } else {
                selecionadosGlobalmente.delete(id);
            }
        });

        tabela.on('draw', function () {
            $('.checkbox-analisar').each(function () {
                if (selecionadosGlobalmente.has(parseInt(this.value))) {
                    $(this).prop('checked', true);
                }
            });
        });
    });

</script>


